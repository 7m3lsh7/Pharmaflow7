@model Pharmaflow7.Models.AddStoreViewModel
@{
    ViewData["Title"] = "Add Store";
}

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - Pharmaflow</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" />
    <style>
        #map {
            height: 400px;
            width: 100%;
        }
    </style>

    <div class="container mt-4">
        <h1 class="mb-4">Add New Store</h1>

        <form asp-action="AddStore" method="post" id="addStoreForm">
            <div class="mb-3">
                <label asp-for="NewStore.StoreName" class="form-label">Store Name</label>
                <input asp-for="NewStore.StoreName" class="form-control" />
                <span asp-validation-for="NewStore.StoreName" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="NewStore.StoreAddress" class="form-label">Store Address</label>
                <input asp-for="NewStore.StoreAddress" class="form-control" id="storeAddress" />
                <span asp-validation-for="NewStore.StoreAddress" class="text-danger"></span>
            </div>
            <div id="map" class="mb-3"></div>
            <button type="submit" class="btn btn-primary">Add Store</button>
        </form>

        <div class="mt-5">
            <h3>Existing Stores</h3>
            @if (Model.ExistingStores.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Store ID</th>
                                <th>Store Name</th>
                                <th>Store Address</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var store in Model.ExistingStores)
                            {
                                <tr>
                                    <td>@store.Id</td>
                                    <td>@store.StoreName</td>
                                    <td>@store.StoreAddress</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <p class="text-muted">No stores added yet.</p>
            }
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"></script>
    <script>
        let map = L.map('map').setView([30.0444, 31.2357], 8);  
        let marker;

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        marker = L.marker([30.0444, 31.2357], { draggable: true }).addTo(map);

        map.on('click', function (e) {
            marker.setLatLng(e.latlng);
            updateAddress(e.latlng);
        });

        marker.on('dragend', function (e) {
            updateAddress(e.target.getLatLng());
        });

        function updateAddress(latlng) {
            fetch(`https://nominatim.openstreetmap.org/reverse?lat=${latlng.lat}&lon=${latlng.lng}&format=json`)
                .then(response => response.json())
                .then(data => {
                    if (data && data.display_name) {
                        document.getElementById("storeAddress").value = data.display_name;
                    } else {
                        document.getElementById("storeAddress").value = "Address not found";
                    }
                })
                .catch(error => {
                    console.error("Error fetching address:", error);
                    document.getElementById("storeAddress").value = "Error fetching address";
                });
        }

         document.getElementById("addStoreForm").addEventListener("submit", function (event) {
            const storeAddress = document.getElementById("storeAddress").value;
            if (!storeAddress || storeAddress === "Address not found" || storeAddress === "Error fetching address") {
                event.preventDefault();
                alert("Please select a valid store address by clicking on the map.");
            }
        });
    </script>
