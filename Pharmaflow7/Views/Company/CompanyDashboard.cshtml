@model Pharmaflow7.Models.CompanyDashboardViewModel
@{
    ViewData["Title"] = "Company Dashboard";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - Medicine Tracking</title>
    <!-- روابط المكتبات الخارجية -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js"></script>
    <!-- ربط ملف CSS -->
    <link rel="stylesheet" href="/css/dash.css" asp-append-version="true">
</head>
<body>
    <!-- Main Content -->
    <div class="content">
        <h1 class="mb-4">Company Dashboard</h1>

        <!-- Overview Cards -->
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="card p-4 text-center">
                    <div class="card-body">
                        <h5 class="card-title">Total Products</h5>
                        <p class="card-text">@Model.TotalProducts</p>
                        <small class="text-muted">Last updated: @DateTime.Now.ToString("MMM dd, yyyy")</small>
                    </div>
                </div>
            </div>
             <div class="col-md-3">
                <div class="card p-4 text-center">
                    <div class="card-body">
                        <h5 class="card-title">Active Shipments</h5>
                        <p class="card-text">@Model.ActiveShipments</p>
                        <small class="text-muted">
                            Pending: @(Model.Shipments.Count(s => s.GetType().GetProperty("Status")?.GetValue(s)?.ToString() == "Pending")) | 
                            In Transit: @(Model.Shipments.Count(s => s.GetType().GetProperty("Status")?.GetValue(s)?.ToString() == "In Transit"))
                        </small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card p-4 text-center">
                    <div class="card-body">
                        <h5 class="card-title">Delivered Shipments</h5>
                        <p class="card-text">@Model.DeliveredShipments</p>
                        <small class="text-muted">Completed shipments</small>
                    </div>
                </div>
            </div>
         <div class="col-md-3">
            <div class="card p-4 text-center">
                <div class="card-body">
                    <h5 class="card-title">Performance Score</h5>
                    <p class="card-text">@Model.PerformanceScore%</p>
                   
                    <small class="text-muted">Based on delivery & sales</small>
                </div>
            </div>
        </div>
        </div>

        <!-- Active Shipments Table -->
        <div class="mb-4">
            <h3>Active Shipments</h3>
            <table class="table">
                <thead>
                    <tr>
                        <th>Shipment ID</th>
                        <th>Product</th>
                        <th>Destination</th>
                        <th>Status</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var shipment in Model.Shipments)
                    {
                        var id = shipment.GetType().GetProperty("Id")?.GetValue(shipment)?.ToString();
                        var productName = shipment.GetType().GetProperty("ProductName")?.GetValue(shipment)?.ToString();
                        var destination = shipment.GetType().GetProperty("Destination")?.GetValue(shipment)?.ToString();
                        var status = shipment.GetType().GetProperty("Status")?.GetValue(shipment)?.ToString();

                        <tr>
                            <td>@id</td>
                            <td>@productName</td>
                            <td>@destination</td>
                            <td>
                                @switch (status)
                                {
                                    case "In Transit":
                                        <span class="badge bg-warning">In Transit</span>
                                        break;
                                    case "Delivered":
                                        <span class="badge bg-success">Delivered</span>
                                        break;
                                    case "Pending":
                                        <span class="badge bg-info">Processing</span>
                                        break;
                                    default:
                                        <span class="badge bg-secondary">@status</span>
                                        break;
                                }
                            </td>
                            <td>
                                <a href="@Url.Action("TrackShipments", "Company", new { id = id })" class="btn btn-primary btn-sm">
                                    @(status == "Delivered" ? "View" : "Track")
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Performance Reports -->
        <div class="row">
            <div class="col-md-6">
                <h3>Sales Performance</h3>
                <div class="card p-3">
                    <canvas id="salesChart" class="chart-container"></canvas>
                </div>
            </div>
            <div class="col-md-6">
                <h3>Distribution Overview</h3>
                <div class="card p-3">
                    <canvas id="distributionChart" class="chart-container"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- روابط السكربتات -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Sales Performance Chart
        const salesCtx = document.getElementById('salesChart').getContext('2d');
        new Chart(salesCtx, {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.SalesData.Select(d => d.GetType().GetProperty("Month")?.GetValue(d)))),
                datasets: [{
                    label: 'Sales',
                    data: @Html.Raw(Json.Serialize(Model.SalesData.Select(d => d.GetType().GetProperty("Total")?.GetValue(d)))),
                    borderColor: '#084181',
                    fill: false
                }]
            },
            options: {
                scales: {
                    y: { beginAtZero: true }
                }
            }
        });

        // Distribution Overview Chart
        const distributionCtx = document.getElementById('distributionChart').getContext('2d');
        new Chart(distributionCtx, {
            type: 'pie',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.DistributionData.Select(d => d.GetType().GetProperty("Destination")?.GetValue(d)))),
                datasets: [{
                    data: @Html.Raw(Json.Serialize(Model.DistributionData.Select(d => d.GetType().GetProperty("Count")?.GetValue(d)))),
                    backgroundColor: ['#084181', '#110555', '#1a73e8', '#90caf9']
                }]
            }
        });
    </script>
</body>
</html>