@model List<Pharmaflow7.Models.ShipmentViewModel>
@{
    ViewData["Title"] = "Track Shipments";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - Medicine Tracking</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="~/css/dash.css" asp-append-version="true">
    <style>
        #map {
            height: 400px; /* ارتفاع الخريطة */
            width: 100%;
        }
    </style>
</head>
<body>
    <!-- Main Content -->
    <div class="content">
        <h1 class="mb-4">Track Shipments</h1>

        <!-- Shipments Table -->
        <div class="mb-4">
            <h3>Shipment List</h3>
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Shipment ID</th>
                            <th>Product</th>
                            <th>Destination</th>
                            <th>Store Address</th>
                            <th>Status</th>
                            <th>Acceptance Status</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="shipmentTableBody">
                        @foreach (var shipment in Model)
                        {
                            <tr>
                                <td>@shipment.Id</td>
                                <td>@shipment.ProductName</td>
                                <td>@shipment.Destination</td>
                                <td>@shipment.StoreAddress</td>
                                <td><span class="badge @(shipment.Status == "In Transit" ? "bg-warning" : shipment.Status == "Delivered" ? "bg-success" : "bg-info")">@shipment.Status</span></td>
                                <td>
                                    @if (shipment.IsAcceptedByDistributor == null)
                                    {
                                        <span class="badge bg-secondary">Pending</span>
                                    }
                                    else if (shipment.IsAcceptedByDistributor == true)
                                    {
                                        <span class="badge bg-success">Accepted</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Rejected</span>
                                    }
                                </td>
                                <td>
                                    <button class="btn btn-primary btn-sm" onclick="showOnMap('@shipment.StoreAddress', '@shipment.Id')">View on Map</button>
                                    <button class="btn btn-success btn-sm" onclick="navigateToShipment('@shipment.StoreAddress')">Navigate</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Map -->
        <div class="card p-3">
            <h3>Shipment Locations</h3>
            <div id="map"></div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB_RHVAafuKLFLunU2rK7gmo4DJYJcpKxg&callback=initMap&libraries=geocoder"></script>
    <script>
        let map;
        let markers = [];
        let geocoder;

        // تهيئة الخريطة
        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: 30.0444, lng: 31.2357 }, // مركز افتراضي (القاهرة)
                zoom: 6
            });
            geocoder = new google.maps.Geocoder();

            // إضافة علامات لجميع الشحنات من النموذج
            const shipments = @Html.Raw(Json.Serialize(Model));
            shipments.forEach(shipment => {
                if (shipment.storeAddress) {
                    geocoder.geocode({ address: shipment.storeAddress }, (results, status) => {
                        if (status === "OK" && results[0]) {
                            const location = results[0].geometry.location;
                            const marker = new google.maps.Marker({
                                position: location,
                                map: map,
                                title: `${shipment.id} - ${shipment.productName}`,
                                icon: shipment.status === 'Delivered' ? 'http://maps.google.com/mapfiles/ms/icons/green-dot.png' :
                                      shipment.status === 'In Transit' ? 'http://maps.google.com/mapfiles/ms/icons/yellow-dot.png' :
                                      'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'
                            });
                            markers.push(marker);

                            // نافذة معلومات لكل علامة
                            const infoWindow = new google.maps.InfoWindow({
                                content: `<h5>${shipment.id}</h5><p>Product: ${shipment.productName}</p><p>Status: ${shipment.status}</p><p>Address: ${shipment.storeAddress}</p>`
                            });
                            marker.addListener('click', () => {
                                infoWindow.open(map, marker);
                            });
                        } else {
                            console.error(`Geocode failed for ${shipment.storeAddress}: ${status}`);
                        }
                    });
                }
            });
        }

        // توسيط الخريطة على شحنة محددة
        function showOnMap(address, shipmentId) {
            geocoder.geocode({ address: address }, (results, status) => {
                if (status === "OK" && results[0]) {
                    const location = results[0].geometry.location;
                    map.setCenter(location);
                    map.setZoom(12);
                    markers.forEach(marker => {
                        if (marker.title.includes(shipmentId)) {
                            new google.maps.InfoWindow({
                                content: marker.title
                            }).open(map, marker);
                        }
                    });
                } else {
                    alert("Could not find location on map: " + address);
                }
            });
        }

        // فتح تطبيق Google Maps للتنقل إلى موقع الشحنة
        function navigateToShipment(address) {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    (position) => {
                        const userLat = position.coords.latitude;
                        const userLng = position.coords.longitude;
                        geocoder.geocode({ address: address }, (results, status) => {
                            if (status === "OK" && results[0]) {
                                const destLat = results[0].geometry.location.lat();
                                const destLng = results[0].geometry.location.lng();
                                const url = `https://www.google.com/maps/dir/?api=1&origin=${userLat},${userLng}&destination=${destLat},${destLng}&travelmode=driving`;
                                window.open(url, '_blank');
                            } else {
                                const url = `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(address)}`;
                                window.open(url, '_blank');
                            }
                        });
                    },
                    (error) => {
                        console.error('Error getting user location:', error);
                        const url = `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(address)}`;
                        window.open(url, '_blank');
                    }
                );
            } else {
                const url = `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(address)}`;
                window.open(url, '_blank');
            }
        }
    </script>
</body>
</html>